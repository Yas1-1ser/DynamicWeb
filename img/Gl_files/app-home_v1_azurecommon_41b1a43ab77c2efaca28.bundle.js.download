/*! For license information please see app-home_v1_azurecommon_41b1a43ab77c2efaca28.bundle.js.LICENSE.txt */
"use strict";(self["app-home_v1_jsonp"]=self["app-home_v1_jsonp"]||[]).push([[1211],{34101:(e,t,n)=>{function r(e,t){return!!e&&!!t&&e===t.split(".")[1]}function o(e,t,n,o){if(o){const{oid:t,sub:n,tid:i,name:a,tfp:s,acr:c}=o,d=i||s||c||"";return{tenantId:d,localAccountId:t||n||"",name:a,isHomeTenant:r(d,e)}}return{tenantId:n,localAccountId:t,isHomeTenant:r(n,e)}}function i(e,t,n,r){let i=e;if(t){const{isHomeTenant:n,...r}=t;i={...e,...r}}if(n){const{isHomeTenant:t,...a}=o(e.homeAccountId,e.localAccountId,e.tenantId,n);return i={...i,...a,idTokenClaims:n,idToken:r},i}return i}n.d(t,{Km:()=>o,aB:()=>r,o9:()=>i})},49981:(e,t,n)=>{n.d(t,{My:()=>i,al:()=>a});var r=n(6764),o=n(13270);function i(e,t){const n=function(e){if(!e)throw(0,r.SB)(o.nullOrEmptyToken);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw(0,r.SB)(o.tokenParsingError);return t[2]}(e);try{const e=t(n);return JSON.parse(e)}catch(e){throw(0,r.SB)(o.tokenParsingError)}}function a(e,t){if(0===t||Date.now()-3e5>e+t)throw(0,r.SB)(o.maxAgeTranspired)}},55270:(e,t,n)=>{n.d(t,{X:()=>r});const r={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"}},54449:(e,t,n)=>{n.d(t,{Z:()=>s,k:()=>a});var r=n(6764),o=n(44609),i=n(13270);function a(e,t){if(!e)throw(0,r.SB)(i.clientInfoEmptyError);try{const n=t(e);return JSON.parse(n)}catch(e){throw(0,r.SB)(i.clientInfoDecodingError)}}function s(e){if(!e)throw(0,r.SB)(i.clientInfoDecodingError);const t=e.split(o.LR.CLIENT_INFO_SEPARATOR,2);return{uid:t[0],utid:t.length<2?o.YM.EMPTY_STRING:t[1]}}},24296:(e,t,n)=>{function r(e){return e&&(e.tid||e.tfp||e.acr)||null}n.d(t,{r:()=>r})},22195:(e,t,n)=>{n.d(t,{s4:()=>T,aw:()=>I,NJ:()=>A,d0:()=>y});var r=n(79797),o=n(37414),i=n(6764),a=n(44609),s=n(20946),c=n(6372),d=n(55135),l=n(57605),h=n(96423),u=n(60878);class m{constructor(e,t,n,r){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=r}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(h.MX.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=a.jZ.ENVIRONMENT_VARIABLE;else{const e=m.IMDS_OPTIONS;try{const r=await(0,u.T)(this.getRegionFromIMDS.bind(this),h.MX.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(a.YM.IMDS_VERSION,e);if(r.status===a.Kk.httpSuccess&&(n=r.body,t.region_source=a.jZ.IMDS),r.status===a.Kk.httpBadRequest){const r=await(0,u.T)(this.getCurrentVersion.bind(this),h.MX.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!r)return t.region_source=a.jZ.FAILED_AUTO_DETECTION,null;const o=await(0,u.T)(this.getRegionFromIMDS.bind(this),h.MX.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(r,e);o.status===a.Kk.httpSuccess&&(n=o.body,t.region_source=a.jZ.IMDS)}}catch(e){return t.region_source=a.jZ.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=a.jZ.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(h.MX.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${a.YM.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,a.YM.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(h.MX.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const t=await this.networkInterface.sendGetRequestAsync(`${a.YM.IMDS_ENDPOINT}?format=json`,e);return t.status===a.Kk.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0?t.body["newest-versions"][0]:null}catch(e){return null}}}m.IMDS_OPTIONS={headers:{Metadata:"true"}};var p=n(71047),g=n(55254),C=n(13270),f=n(69070);class T{constructor(e,t,n,r,o,i,a,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=r,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=a,this.correlationId=i,this.managedIdentity=s||!1,this.regionDiscovery=new m(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(a.YM.CIAM_AUTH_URL))return r.I.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case a.YM.ADFS:return r.I.Adfs;case a.YM.DSTS:return r.I.Dsts}return r.I.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new o.H(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw(0,i.SB)(C.endpointResolutionError)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw(0,i.SB)(C.endpointResolutionError)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw(0,i.SB)(C.endpointResolutionError)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw(0,i.SB)(C.endSessionEndpointNotSupported);return this.replacePath(this.metadata.end_session_endpoint)}throw(0,i.SB)(C.endpointResolutionError)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw(0,i.SB)(C.endpointResolutionError)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw(0,i.SB)(C.endpointResolutionError)}canReplaceTenant(e){return 1===e.PathSegments.length&&!T.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===r.I.Default&&this.protocolMode===d.e.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const n=new o.H(this.metadata.canonical_authority).getUrlComponents(),r=n.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach(((e,i)=>{let a=r[i];if(0===i&&this.canReplaceTenant(n)){const e=new o.H(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];a!==e&&(this.logger.verbose(`Replacing tenant domain name ${a} with id ${e}`),a=e)}e!==a&&(t=t.replace(`/${a}/`,`/${e}/`))})),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===r.I.Adfs||this.protocolMode!==d.e.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await(0,u.T)(this.updateCloudDiscoveryMetadata.bind(this),h.MX.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await(0,u.T)(this.updateEndpointMetadata.bind(this),h.MX.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:n},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:(0,g.p7)(),jwks_uri:""}),e}updateCachedMetadata(e,t,n){t!==a.E_.CACHE&&n?.source!==a.E_.CACHE&&(e.expiresAt=(0,g.p7)(),e.canonical_authority=this.canonicalAuthority);const r=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(r,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===a.E_.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata){const n=await(0,u.T)(this.updateMetadataWithRegionalInformation.bind(this),h.MX.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);(0,g.br)(e,n,!1),e.canonical_authority=this.canonicalAuthority}return t.source}let n=await(0,u.T)(this.getEndpointMetadataFromNetwork.bind(this),h.MX.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(n=await(0,u.T)(this.updateMetadataWithRegionalInformation.bind(this),h.MX.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),(0,g.br)(e,n,!0),a.E_.NETWORK;throw(0,i.SB)(C.openIdConfigError,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),(0,g.br)(e,t,!1),{source:a.E_.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const t=this.getEndpointMetadataFromHardcodedValues();if(t)return(0,g.br)(e,t,!1),{source:a.E_.HARDCODED_VALUES,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=(0,g.gl)(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:a.E_.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new o.H(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw(0,c.aD)(f.invalidAuthorityMetadata)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const n=await this.networkInterface.sendGetRequestAsync(t,e),r=function(e){return e.hasOwnProperty("authorization_endpoint")&&e.hasOwnProperty("token_endpoint")&&e.hasOwnProperty("issuer")&&e.hasOwnProperty("jwks_uri")}(n.body);return r?n.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in s.FI?s.FI[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==a.YM.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=a._2.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,T.replaceWithRegionalInformation(e,t);const n=await(0,u.T)(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),h.MX.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=a._2.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,T.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=a._2.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await(0,u.T)(this.getCloudDiscoveryMetadataFromNetwork.bind(this),h.MX.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return(0,g.Ir)(e,n,!0),a.E_.NETWORK;throw(0,c.aD)(f.untrustedAuthority)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||a.YM.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||a.YM.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||a.YM.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),(0,g.Ir)(e,t,!1),a.E_.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const t=(0,s.hD)(this.hostnameAndPort);if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),(0,g.Ir)(e,t,!1),a.E_.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=(0,g.gl)(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),a.E_.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===r.I.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),T.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=(0,s.ao)(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),(0,c.aD)(f.invalidCloudDiscoveryMetadata)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),T.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(h.MX.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${a.YM.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const r=await this.networkInterface.sendGetRequestAsync(e,t);let o,i;if(function(e){return e.hasOwnProperty("tenant_discovery_endpoint")&&e.hasOwnProperty("metadata")}(r.body))o=r.body,i=o.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${o.tenant_discovery_endpoint}`);else{if(!function(e){return e.hasOwnProperty("error")&&e.hasOwnProperty("error_description")}(r.body))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${r.status}`),o=r.body,o.error===a.YM.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${o.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${o.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),i=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=(0,s.ao)(i,this.hostnameAndPort)}catch(e){if(e instanceof p.lR)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\nError: ${e.errorCode}\nError Description: ${e.errorMessage}`);else{const t=e;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\nError: ${t.name}\nError Description: ${t.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=T.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter((e=>e&&o.H.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort)).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==l._.None){const e=t.tenant?t.tenant:a.YM.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${e}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return a.YM.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw(0,i.SB)(C.endpointResolutionError)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return s.Jr.has(e)}static isPublicCloudAuthority(e){return a.YM.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const r=new o.H(e);r.validateAsUri();const i=r.getUrlComponents();let s=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(s=`${t}.${a.YM.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const c=o.H.constructAuthorityUriFromObject({...r.getUrlComponents(),HostNameAndPort:s}).urlString;return n?`${c}?${n}`:c}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=T.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=T.buildRegionalAuthorityString(n.token_endpoint,t),n.end_session_endpoint&&(n.end_session_endpoint=T.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const n=new o.H(e).getUrlComponents();return 0===n.PathSegments.length&&n.HostNameAndPort.endsWith(a.YM.CIAM_AUTH_URL)&&(t=`${t}${n.HostNameAndPort.split(".")[0]}${a.YM.AAD_TENANT_DOMAIN_SUFFIX}`),t}}function y(e){const t=new o.H(e).getUrlComponents(),n=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(n){case a.v2.COMMON:case a.v2.ORGANIZATIONS:case a.v2.CONSUMERS:return;default:return n}}function A(e){return e.endsWith(a.YM.FORWARD_SLASH)?e:`${e}${a.YM.FORWARD_SLASH}`}function I(e){const t=e.cloudDiscoveryMetadata;let n;if(t)try{n=JSON.parse(t)}catch(e){throw(0,c.aD)(f.invalidCloudDiscoveryMetadata)}return{canonicalAuthority:e.authority?A(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:n}}T.reservedTenantDomains=new Set(["{tenant}","{tenantid}",a.v2.COMMON,a.v2.CONSUMERS,a.v2.ORGANIZATIONS])},69925:(e,t,n)=>{n.d(t,{Y:()=>c});var r=n(22195),o=n(6764),i=n(96423),a=n(60878),s=n(13270);async function c(e,t,n,c,d,l,h){h?.addQueueMeasurement(i.MX.AuthorityFactoryCreateDiscoveredInstance,l);const u=r.s4.transformCIAMAuthority((0,r.NJ)(e)),m=new r.s4(u,t,n,c,d,l,h);try{return await(0,a.T)(m.resolveEndpointsAsync.bind(m),i.MX.AuthorityResolveEndpointsAsync,d,h,l)(),m}catch(e){throw(0,o.SB)(s.endpointResolutionError)}}},20946:(e,t,n)=>{n.d(t,{Bt:()=>c,FI:()=>i,Jr:()=>s,ao:()=>h,hD:()=>l});var r=n(37414),o=n(44609);const i={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},a={tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},s=new Set;function c(e,t){let n;const i=e.canonicalAuthority;if(i){const s=new r.H(i).getUrlComponents().HostNameAndPort;n=d(s,e.cloudDiscoveryMetadata?.metadata,o.E_.CONFIG,t)||d(s,a.metadata,o.E_.HARDCODED_VALUES,t)||e.knownAuthorities}return n||[]}function d(e,t,n,r){if(r?.trace(`getAliasesFromMetadata called with source: ${n}`),e&&t){const o=h(t,e);if(o)return r?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${n}, returning aliases`),o.aliases;r?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${n}`)}return null}function l(e){return h(a.metadata,e)}function h(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(r.aliases.includes(t))return r}return null}a.metadata.forEach((e=>{e.aliases.forEach((e=>{s.add(e)}))}))},57605:(e,t,n)=>{n.d(t,{_:()=>r});const r={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"}},79797:(e,t,n)=>{n.d(t,{I:()=>r});const r={Default:0,Adfs:1,Dsts:2,Ciam:3}},55135:(e,t,n)=>{n.d(t,{e:()=>r});const r={AAD:"AAD",OIDC:"OIDC"}},25210:(e,t,n)=>{n.d(t,{G:()=>g,R:()=>C});var r=n(44609),o=n(55254),i=n(84946),a=n(69813),s=n(6764),c=n(34101),d=n(49981),l=n(59579),h=n(20946),u=n(545),m=n(13270),p=n(33697);class g{constructor(e,t,n,r){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(l.U,l.r),this.staticAuthorityOptions=r}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.sort((e=>e.idTokenClaims?-1:1))[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap((e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t)))}getTenantedAccountInfoByFilter(e,t,n,r){let o,i=null;if(r&&!this.tenantProfileMatchesFilter(n,r))return null;const a=this.getIdToken(e,t,n.tenantId);return a&&(o=(0,d.My)(a.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(o,r))?null:(i=(0,c.o9)(e,n,o,a?.secret),i)}getTenantProfilesFromAccountEntity(e,t,n){const r=e.getAccountInfo();let o=r.tenantProfiles||new Map;const i=this.getTokenKeys();if(t){const e=o.get(t);if(!e)return[];o=new Map([[t,e]])}const a=[];return o.forEach((e=>{const t=this.getTenantedAccountInfoByFilter(r,i,e,n);t&&a.push(t)})),a}tenantProfileMatchesFilter(e,t){return!(t.localAccountId&&!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId)||t.name&&e.name!==t.name||void 0!==t.isHomeTenant&&e.isHomeTenant!==t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){if(t){if(t.localAccountId&&!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))return!1;if(t.loginHint&&!this.matchLoginHintFromTokenClaims(e,t.loginHint))return!1;if(t.username&&!this.matchUsername(e.preferred_username,t.username))return!1;if(t.name&&!this.matchName(e,t.name))return!1;if(t.sid&&!this.matchSid(e,t.sid))return!1}return!0}async saveCacheRecord(e,t,n){if(!e)throw(0,s.SB)(m.invalidCacheRecord);try{e.account&&this.setAccount(e.account),e.idToken&&!1!==t?.idToken&&this.setIdTokenCredential(e.idToken),e.accessToken&&!1!==t?.accessToken&&await this.saveAccessToken(e.accessToken),e.refreshToken&&!1!==t?.refreshToken&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){throw this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error?(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,n),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota")?(this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",n),new u.xA(p.Z)):new u.xA(e.name,e.message)):(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,n),new u.xA(p.Y))}}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),r=i.l.fromString(e.target),o=[];n.accessToken.forEach((e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;const n=this.getAccessTokenCredential(e);n&&this.credentialMatchesFilter(n,t)&&i.l.fromString(n.target).intersectingScopeSets(r)&&o.push(this.removeAccessToken(e))})),await Promise.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach((t=>{if(!this.isAccountKey(t,e.homeAccountId))return;const r=this.getAccount(t,this.commonLogger);if(!r)return;if(e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId))return;if(e.username&&!this.matchUsername(r.username,e.username))return;if(e.environment&&!this.matchEnvironment(r,e.environment))return;if(e.realm&&!this.matchRealm(r,e.realm))return;if(e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId))return;if(e.authorityType&&!this.matchAuthorityType(r,e.authorityType))return;const o={localAccountId:e?.localAccountId,name:e?.name},i=r.tenantProfiles?.filter((e=>this.tenantProfileMatchesFilter(e,o)));i&&0===i.length||n.push(r)})),n}isAccountKey(e,t,n){return!(e.split(r.LR.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(r.LR.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(-1===t.indexOf(r.aG.ID_TOKEN.toLowerCase())&&-1===t.indexOf(r.aG.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(r.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(r.aG.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(r.aG.REFRESH_TOKEN.toLowerCase())>-1){const e=`${r.aG.REFRESH_TOKEN}${r.LR.CACHE_KEY_SEPARATOR}${this.clientId}${r.LR.CACHE_KEY_SEPARATOR}`,n=`${r.aG.REFRESH_TOKEN}${r.LR.CACHE_KEY_SEPARATOR}${r.hB}${r.LR.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(n.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){if(t.clientId&&!this.matchClientId(e,t.clientId))return!1;if(t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash))return!1;if("string"==typeof t.homeAccountId&&!this.matchHomeAccountId(e,t.homeAccountId))return!1;if(t.environment&&!this.matchEnvironment(e,t.environment))return!1;if(t.realm&&!this.matchRealm(e,t.realm))return!1;if(t.credentialType&&!this.matchCredentialType(e,t.credentialType))return!1;if(t.familyId&&!this.matchFamilyId(e,t.familyId))return!1;if(t.target&&!this.matchTarget(e,t.target))return!1;if((t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash)return!1;if(e.credentialType===r.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME){if(t.tokenType&&!this.matchTokenType(e,t.tokenType))return!1;if(t.tokenType===r.IO.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId))return!1}return!0}getAppMetadataFilteredBy(e){const t=this.getKeys(),n={};return t.forEach((t=>{if(!this.isAppMetadata(t))return;const r=this.getAppMetadata(t);r&&(e.environment&&!this.matchEnvironment(r,e.environment)||e.clientId&&!this.matchClientId(r,e.clientId)||(n[t]=r))})),n}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach((t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;const r=this.getAuthorityMetadata(t);r&&-1!==r.aliases.indexOf(e)&&(n=r)})),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach((e=>{t.push(this.removeAccount(e))})),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),r=[];t.idToken.forEach((e=>{0===e.indexOf(n)&&this.removeIdToken(e)})),t.accessToken.forEach((e=>{0===e.indexOf(n)&&r.push(this.removeAccessToken(e))})),t.refreshToken.forEach((e=>{0===e.indexOf(n)&&this.removeRefreshToken(e)})),await Promise.all(r)}updateOutdatedCachedAccount(e,t,n){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");const r=this.getAccountKeys().filter((e=>e.startsWith(t.homeAccountId))),o=[];r.forEach((e=>{const t=this.getCachedAccountEntity(e);t&&o.push(t)}));const i=o.find((e=>(0,c.aB)(e.realm,e.homeAccountId)))||o[0];i.tenantProfiles=o.map((e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:(0,c.aB)(e.realm,e.homeAccountId)})));const s=g.toObject(new a.d,{...i}),d=s.generateAccountKey();return r.forEach((t=>{t!==d&&this.removeOutdatedAccount(e)})),this.setAccount(s),n?.verbose("Updated an outdated account entity in the cache"),s}return t}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===r.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===r.IO.POP){const e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw(0,s.SB)(m.bindingKeyNotRemoved)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach((e=>{this.isAppMetadata(e)&&this.removeItem(e)})),!0}readAccountFromCache(e){const t=a.d.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,n,o,i){this.commonLogger.trace("CacheManager - getIdToken called");const a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:r.aG.ID_TOKEN,clientId:this.clientId,realm:n},s=this.getIdTokensByFilter(a,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let t=s;if(!n){const n=new Map;s.forEach(((t,r)=>{t.realm===e.tenantId&&n.set(r,t)}));const r=n.size;if(r<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===r)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),n.values().next().value;t=n}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach(((e,t)=>{this.removeIdToken(t)})),o&&i&&o.addFields({multiMatchedID:s.size},i),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,r=new Map;return n.forEach((t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;const n=this.getIdTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.set(t,n)})),r}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n,a,s,c){this.commonLogger.trace("CacheManager - getAccessToken called");const d=i.l.createSearchScopes(t.scopes),l=t.authenticationScheme||r.IO.BEARER,h=l&&l.toLowerCase()!==r.IO.BEARER.toLowerCase()?r.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME:r.aG.ACCESS_TOKEN,u={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:h,clientId:this.clientId,realm:a||e.tenantId,target:d,tokenType:l,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},m=n&&n.accessToken||this.getTokenKeys().accessToken,p=[];m.forEach((e=>{if(this.accessTokenKeyMatchesFilter(e,u,!0)){const t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,u)&&p.push(t)}}));const g=p.length;return g<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):g>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),p.forEach((e=>{this.removeAccessToken((0,o.og)(e))})),s&&c&&s.addFields({multiMatchedAT:p.length},c),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),p[0])}accessTokenKeyMatchesFilter(e,t,n){const r=e.toLowerCase();if(t.clientId&&-1===r.indexOf(t.clientId.toLowerCase()))return!1;if(t.homeAccountId&&-1===r.indexOf(t.homeAccountId.toLowerCase()))return!1;if(t.realm&&-1===r.indexOf(t.realm.toLowerCase()))return!1;if(t.requestedClaimsHash&&-1===r.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){const e=t.target.asArray();for(let t=0;t<e.length;t++){if(n&&!r.includes(e[t].toLowerCase()))return!1;if(!n&&r.includes(e[t].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach((t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;const r=this.getAccessTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.push(r)})),n}getRefreshToken(e,t,n,o,i){this.commonLogger.trace("CacheManager - getRefreshToken called");const a=t?r.hB:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:r.aG.REFRESH_TOKEN,clientId:this.clientId,familyId:a},c=n&&n.refreshToken||this.getTokenKeys().refreshToken,d=[];c.forEach((e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){const t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&d.push(t)}}));const l=d.length;return l<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(l>1&&o&&i&&o.addFields({multiMatchedRT:l},i),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),d[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&-1===n.indexOf(t.familyId.toLowerCase())||!t.familyId&&t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),r=Object.keys(n).map((e=>n[e])),o=r.length;if(o<1)return null;if(o>1)throw(0,s.SB)(m.multipleMatchingAppMetadata);return r[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!(!t||t.familyId!==r.hB)}matchHomeAccountId(e,t){return!("string"!=typeof e.homeAccountId||t!==e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!(!e||"string"!=typeof e||t?.toLowerCase()!==e.toLowerCase())}matchUserAssertionHash(e,t){return!(!e.userAssertionHash||t!==e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const n=(0,h.Bt)(this.staticAuthorityOptions,this.commonLogger);if(n.includes(t)&&n.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!(!e.clientId||t!==e.clientId)}matchFamilyId(e,t){return!(!e.familyId||t!==e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!(!e.nativeAccountId||t!==e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!(!e.authorityType||t.toLowerCase()!==e.authorityType.toLowerCase())}matchTarget(e,t){return!(e.credentialType!==r.aG.ACCESS_TOKEN&&e.credentialType!==r.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target)&&i.l.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!(!e.tokenType||e.tokenType!==t)}matchKeyId(e,t){return!(!e.keyId||e.keyId!==t)}isAppMetadata(e){return-1!==e.indexOf(r.GU)}isAuthorityMetadata(e){return-1!==e.indexOf(r.u0.CACHE_KEY)}generateAuthorityMetadataCacheKey(e){return`${r.u0.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class C extends g{setAccount(){throw(0,s.SB)(m.methodNotImplemented)}getAccount(){throw(0,s.SB)(m.methodNotImplemented)}getCachedAccountEntity(){throw(0,s.SB)(m.methodNotImplemented)}setIdTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}getIdTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}setAccessTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}getAccessTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}setRefreshTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}getRefreshTokenCredential(){throw(0,s.SB)(m.methodNotImplemented)}setAppMetadata(){throw(0,s.SB)(m.methodNotImplemented)}getAppMetadata(){throw(0,s.SB)(m.methodNotImplemented)}setServerTelemetry(){throw(0,s.SB)(m.methodNotImplemented)}getServerTelemetry(){throw(0,s.SB)(m.methodNotImplemented)}setAuthorityMetadata(){throw(0,s.SB)(m.methodNotImplemented)}getAuthorityMetadata(){throw(0,s.SB)(m.methodNotImplemented)}getAuthorityMetadataKeys(){throw(0,s.SB)(m.methodNotImplemented)}setThrottlingCache(){throw(0,s.SB)(m.methodNotImplemented)}getThrottlingCache(){throw(0,s.SB)(m.methodNotImplemented)}removeItem(){throw(0,s.SB)(m.methodNotImplemented)}getKeys(){throw(0,s.SB)(m.methodNotImplemented)}getAccountKeys(){throw(0,s.SB)(m.methodNotImplemented)}getTokenKeys(){throw(0,s.SB)(m.methodNotImplemented)}async clear(){throw(0,s.SB)(m.methodNotImplemented)}updateCredentialCacheKey(){throw(0,s.SB)(m.methodNotImplemented)}removeOutdatedAccount(){throw(0,s.SB)(m.methodNotImplemented)}}},69813:(e,t,n)=>{n.d(t,{d:()=>h});var r=n(44609),o=n(54449),i=n(34101),a=n(6764),s=n(79797),c=n(24296),d=n(55135),l=n(13270);class h{generateAccountId(){return[this.homeAccountId,this.environment].join(r.LR.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return h.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map((e=>[e.tenantId,e])))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){const t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(r.LR.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,n){const u=new h;let m;t.authorityType===s.I.Adfs?u.authorityType=r.Qd.ADFS_ACCOUNT_TYPE:t.protocolMode===d.e.AAD?u.authorityType=r.Qd.MSSTS_ACCOUNT_TYPE:u.authorityType=r.Qd.GENERIC_ACCOUNT_TYPE,e.clientInfo&&n&&(m=(0,o.k)(e.clientInfo,n)),u.clientInfo=e.clientInfo,u.homeAccountId=e.homeAccountId,u.nativeAccountId=e.nativeAccountId;const p=e.environment||t&&t.getPreferredCache();if(!p)throw(0,a.SB)(l.invalidCacheEnvironment);u.environment=p,u.realm=m?.utid||(0,c.r)(e.idTokenClaims)||"",u.localAccountId=m?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";const g=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,C=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(u.username=g||C||"",u.name=e.idTokenClaims?.name||"",u.cloudGraphHostName=e.cloudGraphHostName,u.msGraphHost=e.msGraphHost,e.tenantProfiles)u.tenantProfiles=e.tenantProfiles;else{const t=(0,i.Km)(e.homeAccountId,u.localAccountId,u.realm,e.idTokenClaims);u.tenantProfiles=[t]}return u}static createFromAccountInfo(e,t,n){const o=new h;return o.authorityType=e.authorityType||r.Qd.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),o}static generateHomeAccountId(e,t,n,r,i){if(t!==s.I.Adfs&&t!==s.I.Dsts){if(e)try{const t=(0,o.k)(e,r.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}n.warning("No client info in response")}return i?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let r=!0;if(n){const n=e.idTokenClaims||{},o=t.idTokenClaims||{};r=n.iat===o.iat&&n.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&r}}},55254:(e,t,n)=>{n.d(t,{Ir:()=>M,JP:()=>_,Kx:()=>p,Mg:()=>h,Np:()=>l,WB:()=>g,br:()=>v,c_:()=>d,dj:()=>m,ey:()=>S,gl:()=>O,ki:()=>R,og:()=>c,p7:()=>k,r1:()=>E,ur:()=>I});var r=n(49981),o=n(6764),i=n(44609),a=n(55616),s=n(13270);function c(e){return[C(e),f(e),T(e),y(e),A(e)].join(i.LR.CACHE_KEY_SEPARATOR).toLowerCase()}function d(e,t,n,r,o){return{credentialType:i.aG.ID_TOKEN,homeAccountId:e,environment:t,clientId:r,secret:n,realm:o}}function l(e,t,n,c,d,l,h,u,m,p,g,C,f,T,y){const A={homeAccountId:e,credentialType:i.aG.ACCESS_TOKEN,secret:n,cachedAt:(0,a._C)().toString(),expiresOn:h.toString(),extendedExpiresOn:u.toString(),environment:t,clientId:c,realm:d,target:l,tokenType:g||i.IO.BEARER};if(C&&(A.userAssertionHash=C),p&&(A.refreshOn=p.toString()),T&&(A.requestedClaims=T,A.requestedClaimsHash=y),A.tokenType?.toLowerCase()!==i.IO.BEARER.toLowerCase())switch(A.credentialType=i.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME,A.tokenType){case i.IO.POP:const e=(0,r.My)(n,m);if(!e?.cnf?.kid)throw(0,o.SB)(s.tokenClaimsCnfRequiredForSignedJwt);A.keyId=e.cnf.kid;break;case i.IO.SSH:A.keyId=f}return A}function h(e,t,n,r,o,a,s){const c={credentialType:i.aG.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:r,secret:n};return a&&(c.userAssertionHash=a),o&&(c.familyId=o),s&&(c.expiresOn=s.toString()),c}function u(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function m(e){return!!e&&u(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===i.aG.ACCESS_TOKEN||e.credentialType===i.aG.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function p(e){return!!e&&u(e)&&e.hasOwnProperty("realm")&&e.credentialType===i.aG.ID_TOKEN}function g(e){return!!e&&u(e)&&e.credentialType===i.aG.REFRESH_TOKEN}function C(e){return[e.homeAccountId,e.environment].join(i.LR.CACHE_KEY_SEPARATOR).toLowerCase()}function f(e){const t=e.credentialType===i.aG.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(i.LR.CACHE_KEY_SEPARATOR).toLowerCase()}function T(e){return(e.target||"").toLowerCase()}function y(e){return(e.requestedClaimsHash||"").toLowerCase()}function A(e){return e.tokenType&&e.tokenType.toLowerCase()!==i.IO.BEARER.toLowerCase()?e.tokenType.toLowerCase():""}function I(e,t){const n=0===e.indexOf(i.gT.CACHE_KEY);let r=!0;return t&&(r=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),n&&r}function E(e,t){let n=!1;e&&(n=0===e.indexOf(i.Xw.THROTTLING_PREFIX));let r=!0;return t&&(r=t.hasOwnProperty("throttleTime")),n&&r}function _({environment:e,clientId:t}){return[i.GU,e,t].join(i.LR.CACHE_KEY_SEPARATOR).toLowerCase()}function R(e,t){return!!t&&0===e.indexOf(i.GU)&&t.hasOwnProperty("clientId")&&t.hasOwnProperty("environment")}function S(e,t){return!!t&&0===e.indexOf(i.u0.CACHE_KEY)&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri")}function k(){return(0,a._C)()+i.u0.REFRESH_TIME_SECONDS}function v(e,t,n){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=n,e.jwks_uri=t.jwks_uri}function M(e,t,n){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=n}function O(e){return e.expiresAt<=(0,a._C)()}},23549:(e,t,n)=>{n.d(t,{m:()=>_});var r=n(68468),o=n(24071),i=n(44609),a=n(956),s=n(39422),c=n(44988),d=n(44048),l=n(6764),h=n(37414),u=n(39109),m=n(55616),p=n(54449),g=n(55270),C=n(6372),f=n(63689),T=n(96423),y=n(60878),A=n(60056),I=n(13270),E=n(69070);class _ extends r.V{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(T.MX.GetAuthCodeUrl,e.correlationId);const t=await(0,y.T)(this.createAuthCodeUrlQueryString.bind(this),T.MX.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return h.H.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(T.MX.AuthClientAcquireToken,e.correlationId),!e.code)throw(0,l.SB)(I.requestCannotBeMade);const n=(0,m._C)(),r=await(0,y.T)(this.executeTokenRequest.bind(this),T.MX.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=r.headers?.[i.OK.X_MS_REQUEST_ID],a=new c.w(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return a.validateTokenResponse(r.body),(0,y.T)(a.handleServerTokenResponse.bind(a),T.MX.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,n,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new c.w(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw(0,l.SB)(I.authorizationCodeMissingFromServerResponse);return e}getLogoutUri(e){if(!e)throw(0,C.aD)(E.logoutRequestEmpty);const t=this.createLogoutUrlQueryString(e);return h.H.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(T.MX.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),r=h.H.appendQueryString(e.tokenEndpoint,n),o=await(0,y.T)(this.createTokenRequestBody.bind(this),T.MX.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let a;if(t.clientInfo)try{const e=(0,p.k)(t.clientInfo,this.cryptoUtils.base64Decode);a={credential:`${e.uid}${i.LR.CLIENT_INFO_SEPARATOR}${e.utid}`,type:g.X.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}const s=this.createTokenRequestHeaders(a||t.ccsCredential),c={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return(0,y.T)(this.executePostToTokenEndpoint.bind(this),T.MX.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(r,o,s,c,t.correlationId,T.MX.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(T.MX.AuthClientCreateTokenRequestBody,e.correlationId);const t=new o.W;if(t.addClientId(e.tokenBodyParameters?.[a.U6]||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):f.M.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!(0,s.hf)(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const n=this.config.clientCredentials.clientAssertion;t.addClientAssertion(await(0,A.A)(n.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),t.addClientAssertionType(n.assertionType)}if(t.addGrantType(i.$x.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===i.IO.POP){const n=new u.Q(this.cryptoUtils,this.performanceClient);let r;r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await(0,y.T)(n.generateCnf.bind(n),T.MX.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}else if(e.authenticationScheme===i.IO.SSH){if(!e.sshJwk)throw(0,C.aD)(E.missingSshJwk);t.addSshJwk(e.sshJwk)}const n=e.correlationId||this.config.cryptoInterface.createNewGuid();let r;if(t.addCorrelationId(n),(!d.$.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{const t=(0,p.k)(e.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${t.uid}${i.LR.CLIENT_INFO_SEPARATOR}${t.utid}`,type:g.X.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else r=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&r)switch(r.type){case g.X.HOME_ACCOUNT_ID:try{const e=(0,p.Z)(r.credential);t.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case g.X.UPN:t.addCcsUpn(r.credential)}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[a.ir]||t.addExtraQueryParameters({[a.ir]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(T.MX.AuthClientCreateQueryString,e.correlationId);const t=new o.W;t.addClientId(e.extraQueryParameters?.[a.U6]||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(n,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const r=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(r),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),(0,s.hf)(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==i._M.SELECT_ACCOUNT)if(e.sid&&e.prompt===i._M.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const n=this.extractAccountSid(e.account);let r=this.extractLoginHint(e.account);if(r&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),r=null),r){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(r);try{const n=(0,p.Z)(e.account.homeAccountId);t.addCcsOid(n)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(n&&e.prompt===i._M.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(n);try{const n=(0,p.Z)(e.account.homeAccountId);t.addCcsOid(n)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const n=(0,p.Z)(e.account.homeAccountId);t.addCcsOid(n)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===i.IO.POP)){const n=new u.Q(this.cryptoUtils);let r;r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await(0,y.T)(n.generateCnf.bind(n),T.MX.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new o.W;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}},68468:(e,t,n)=>{n.d(t,{V:()=>f});var r=n(39422),o=n(55327),i=n(71047),a=n(6764),s=n(13270);class c{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,n){let r;o.H.preProcess(this.cacheManager,e);try{r=await this.networkClient.sendPostRequestAsync(t,n)}catch(e){throw e instanceof i.lR?e:(0,a.SB)(s.networkError)}return o.H.postProcess(this.cacheManager,e,r),r}}var d=n(29519),l=n(44609),h=n(59579),u=n(55270),m=n(54449),p=n(24071),g=n(69925),C=n(96423);class f{constructor(e,t){this.config=(0,r.GF)(e),this.logger=new d.V(this.config.loggerOptions,h.U,h.r),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new c(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[l.OK.CONTENT_TYPE]=l.YM.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case u.X.HOME_ACCOUNT_ID:try{const n=(0,m.Z)(e.credential);t[l.OK.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case u.X.UPN:t[l.OK.CCS_HEADER]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,n,r,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);const a=await this.networkManager.sendPostRequest(r,e,{body:t,headers:n});return this.performanceClient?.addFields({refreshTokenSize:a.body.refresh_token?.length||0,httpVerToken:a.headers?.[l.OK.X_MS_HTTP_VERSION]||""},o),this.config.serverTelemetryManager&&a.status<500&&429!==a.status&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(C.MX.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,r=await(0,g.Y)(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=r}createTokenQueryParameters(e){const t=new p.W;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}},66193:(e,t,n)=>{n.d(t,{O:()=>k});var r=n(39422),o=n(68468),i=n(24071),a=n(44609),s=n(956),c=n(44988),d=n(39109),l=n(44048),h=n(6372),u=n(6764),m=n(44110),p=n(55616),g=n(37414),C=n(55270),f=n(54449),T=n(71068),y=n(96423),A=n(60878),I=n(55254),E=n(60056),_=n(69070),R=n(13270),S=n(678);class k extends o.V{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(y.MX.RefreshTokenClientAcquireToken,e.correlationId);const t=(0,p._C)(),n=await(0,A.T)(this.executeTokenRequest.bind(this),y.MX.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),r=n.headers?.[a.OK.X_MS_REQUEST_ID],o=new c.w(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(n.body),(0,A.T)(o.handleServerTokenResponse.bind(o),y.MX.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,r)}async acquireTokenByRefreshToken(e){if(!e)throw(0,h.aD)(_.tokenRequestEmpty);if(this.performanceClient?.addQueueMeasurement(y.MX.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw(0,u.SB)(R.noAccountInSilentRequest);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await(0,A.T)(this.acquireTokenWithCachedRefreshToken.bind(this),y.MX.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(t){const n=t instanceof T.CB&&t.errorCode===S.noTokensFound,r=t instanceof m.g&&t.errorCode===a.I.INVALID_GRANT_ERROR&&t.subError===a.I.CLIENT_MISMATCH_ERROR;if(n||r)return(0,A.T)(this.acquireTokenWithCachedRefreshToken.bind(this),y.MX.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw t}return(0,A.T)(this.acquireTokenWithCachedRefreshToken.bind(this),y.MX.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(y.MX.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=(0,A.l)(this.cacheManager.getRefreshToken.bind(this.cacheManager),y.MX.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!n)throw(0,T.IE)(S.noTokensFound);if(n.expiresOn&&(0,p.Hm)(n.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw(0,T.IE)(S.refreshTokenExpired);const r={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||a.IO.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:C.X.HOME_ACCOUNT_ID}};try{return await(0,A.T)(this.acquireToken.bind(this),y.MX.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(r)}catch(e){if(e instanceof T.CB&&e.subError===S.badToken){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");const e=(0,I.og)(n);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(y.MX.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),r=g.H.appendQueryString(t.tokenEndpoint,n),o=await(0,A.T)(this.createTokenRequestBody.bind(this),y.MX.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return(0,A.T)(this.executePostToTokenEndpoint.bind(this),y.MX.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(r,o,i,a,e.correlationId,y.MX.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(y.MX.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new i.W;if(n.addClientId(e.tokenBodyParameters?.[s.U6]||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),n.addGrantType(a.$x.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!(0,r.hf)(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addCorrelationId(t),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const t=this.config.clientCredentials.clientAssertion;n.addClientAssertion(await(0,E.A)(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),n.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===a.IO.POP){const t=new d.Q(this.cryptoUtils,this.performanceClient);let r;r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await(0,A.T)(t.generateCnf.bind(t),y.MX.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,n.addPopToken(r)}else if(e.authenticationScheme===a.IO.SSH){if(!e.sshJwk)throw(0,h.aD)(_.missingSshJwk);n.addSshJwk(e.sshJwk)}if((!l.$.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case C.X.HOME_ACCOUNT_ID:try{const t=(0,f.Z)(e.ccsCredential.credential);n.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case C.X.UPN:n.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}},46582:(e,t,n)=>{n.d(t,{t:()=>g});var r=n(68468),o=n(55616),i=n(66193),a=n(6764),s=n(44988),c=n(44609),d=n(44048),l=n(49981),h=n(96423),u=n(60878),m=n(22195),p=n(13270);class g extends r.V{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...c.aZ]});return n===c.Rv.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new i.O(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch((()=>{}))),t}catch(t){if(t instanceof a.eB&&t.errorCode===p.tokenRefreshRequired)return new i.O(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(h.MX.SilentFlowClientAcquireCachedToken,e.correlationId);let t=c.Rv.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!d.$.isEmptyObj(e.claims))throw this.setCacheOutcome(c.Rv.FORCE_REFRESH_OR_CLAIMS,e.correlationId),(0,a.SB)(p.tokenRefreshRequired);if(!e.account)throw(0,a.SB)(p.noAccountInSilentRequest);const n=e.account.tenantId||(0,m.d0)(e.authority),r=this.cacheManager.getTokenKeys(),i=this.cacheManager.getAccessToken(e.account,e,r,n,this.performanceClient,e.correlationId);if(!i)throw this.setCacheOutcome(c.Rv.NO_CACHED_ACCESS_TOKEN,e.correlationId),(0,a.SB)(p.tokenRefreshRequired);if((0,o.XJ)(i.cachedAt)||(0,o.Hm)(i.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(c.Rv.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),(0,a.SB)(p.tokenRefreshRequired);i.refreshOn&&(0,o.Hm)(i.refreshOn,0)&&(t=c.Rv.PROACTIVELY_REFRESHED);const s=e.authority||this.authority.getPreferredCache(),l={account:this.cacheManager.readAccountFromCache(e.account),accessToken:i,idToken:this.cacheManager.getIdToken(e.account,r,n,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(s)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await(0,u.T)(this.generateResultFromCacheRecord.bind(this),h.MX.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(l,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==c.Rv.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let n;if(this.performanceClient?.addQueueMeasurement(h.MX.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(n=(0,l.My)(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){const e=n?.auth_time;if(!e)throw(0,a.SB)(p.authTimeNotFound);(0,l.al)(e,t.maxAge)}return s.w.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}},39422:(e,t,n)=>{n.d(t,{GF:()=>A,J1:()=>u,hf:()=>I});var r=n(87992),o=n(29519),i=n(44609),a=n(59579),s=n(57605),c=n(25210),d=n(55135),l=n(6764),h=n(13270);const u={tokenRenewalOffsetSeconds:i.F0,preventCorsPreflight:!1},m={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:o.$.Info,correlationId:i.YM.EMPTY_STRING},p={claimsBasedCachingEnabled:!1},g={async sendGetRequestAsync(){throw(0,l.SB)(h.methodNotImplemented)},async sendPostRequestAsync(){throw(0,l.SB)(h.methodNotImplemented)}},C={sku:i.YM.SKU,version:a.r,cpu:i.YM.EMPTY_STRING,os:i.YM.EMPTY_STRING},f={clientSecret:i.YM.EMPTY_STRING,clientAssertion:void 0},T={azureCloudInstance:s._.None,tenant:`${i.YM.DEFAULT_COMMON_TENANT}`},y={application:{appName:"",appVersion:""}};function A({authOptions:e,systemOptions:t,loggerOptions:n,cacheOptions:i,storageInterface:a,networkInterface:s,cryptoInterface:d,clientCredentials:l,libraryInfo:h,telemetry:A,serverTelemetryManager:I,persistencePlugin:E,serializableCache:_}){const R={...m,...n};return{authOptions:(S=e,{clientCapabilities:[],azureCloudOptions:T,skipAuthorityMetadataCache:!1,...S}),systemOptions:{...u,...t},loggerOptions:R,cacheOptions:{...p,...i},storageInterface:a||new c.R(e.clientId,r.j,new o.V(R)),networkInterface:s||g,cryptoInterface:d||r.j,clientCredentials:l||f,libraryInfo:{...C,...h},telemetry:{...y,...A},serverTelemetryManager:I||null,persistencePlugin:E||null,serializableCache:_||null};var S}function I(e){return e.authOptions.authority.options.protocolMode===d.e.OIDC}},956:(e,t,n)=>{n.d(t,{$n:()=>w,A3:()=>T,AG:()=>O,Am:()=>s,Az:()=>R,C$:()=>E,E0:()=>g,H5:()=>H,IF:()=>c,Ns:()=>v,PM:()=>k,R3:()=>S,R_:()=>U,SP:()=>x,Sq:()=>p,Tq:()=>D,U6:()=>r,Xs:()=>f,YB:()=>K,Zn:()=>M,_q:()=>o,aZ:()=>l,ag:()=>a,ai:()=>_,au:()=>u,c4:()=>h,dF:()=>G,dn:()=>i,hF:()=>m,hx:()=>d,ir:()=>F,oE:()=>b,p$:()=>N,pG:()=>B,pe:()=>A,pg:()=>y,rg:()=>Y,sg:()=>I,uP:()=>C,yF:()=>q,yj:()=>L,z1:()=>P});const r="client_id",o="redirect_uri",i="response_type",a="response_mode",s="grant_type",c="claims",d="scope",l="refresh_token",h="state",u="nonce",m="prompt",p="code",g="code_challenge",C="code_challenge_method",f="code_verifier",T="client-request-id",y="x-client-SKU",A="x-client-VER",I="x-client-OS",E="x-client-CPU",_="x-client-current-telemetry",R="x-client-last-telemetry",S="x-ms-lib-capability",k="x-app-name",v="x-app-ver",M="post_logout_redirect_uri",O="id_token_hint",w="device_code",N="client_secret",P="client_assertion",b="client_assertion_type",D="token_type",U="req_cnf",q="assertion",H="requested_token_use",F="return_spa_code",L="nativebroker",B="logout_hint",G="sid",x="login_hint",Y="domain_hint",K="x-client-xtra-sku"},87992:(e,t,n)=>{n.d(t,{j:()=>i});var r=n(6764),o=n(13270);const i={createNewGuid:()=>{throw(0,r.SB)(o.methodNotImplemented)},base64Decode:()=>{throw(0,r.SB)(o.methodNotImplemented)},base64Encode:()=>{throw(0,r.SB)(o.methodNotImplemented)},base64UrlEncode:()=>{throw(0,r.SB)(o.methodNotImplemented)},encodeKid:()=>{throw(0,r.SB)(o.methodNotImplemented)},async getPublicKeyThumbprint(){throw(0,r.SB)(o.methodNotImplemented)},async removeTokenBindingKey(){throw(0,r.SB)(o.methodNotImplemented)},async clearKeystore(){throw(0,r.SB)(o.methodNotImplemented)},async signJwt(){throw(0,r.SB)(o.methodNotImplemented)},async hashString(){throw(0,r.SB)(o.methodNotImplemented)}}},30424:(e,t,n)=>{n.d(t,{p:()=>l});var r=n(71047);const o="missing_kid_error",i="missing_alg_error",a={[o]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[i]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class s extends r.lR{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,s.prototype)}}function c(e){return new s(e,a[e])}var d=n(44609);class l{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw c(o);if(!e.alg)throw c(i);const t=new l({typ:e.typ||d.Lz.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}},39109:(e,t,n)=>{n.d(t,{Q:()=>s});var r=n(55616),o=n(37414),i=n(96423),a=n(60878);class s{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(i.MX.PopTokenGenerateCnf,e.correlationId);const n=await(0,a.T)(this.generateKid.bind(this),i.MX.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),r=this.cryptoUtils.base64UrlEncode(JSON.stringify(n));return{kid:n.kid,reqCnfString:r}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(i.MX.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,i){const{resourceRequestMethod:a,resourceRequestUri:s,shrClaims:c,shrNonce:d,shrOptions:l}=n,h=s?new o.H(s):void 0,u=h?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:(0,r._C)(),m:a?.toUpperCase(),u:u?.HostNameAndPort,nonce:d||this.cryptoUtils.createNewGuid(),p:u?.AbsolutePath,q:u?.QueryString?[[],u.QueryString]:void 0,client_claims:c||void 0,...i},t,l,n.correlationId)}}},71047:(e,t,n)=>{n.d(t,{ej:()=>a,lR:()=>s,pz:()=>c});var r=n(44609),o=n(66799);const i={[o.unexpectedError]:"Unexpected error in authentication.",[o.postRequestFailed]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},a={unexpectedError:{code:o.unexpectedError,desc:i[o.unexpectedError]},postRequestFailed:{code:o.postRequestFailed,desc:i[o.postRequestFailed]}};class s extends Error{constructor(e,t,n){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,s.prototype),this.errorCode=e||r.YM.EMPTY_STRING,this.errorMessage=t||r.YM.EMPTY_STRING,this.subError=n||r.YM.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function c(e,t){return new s(e,t?`${i[e]} ${t}`:i[e])}},66799:(e,t,n)=>{n.r(t),n.d(t,{postRequestFailed:()=>o,unexpectedError:()=>r});const r="unexpected_error",o="post_request_failed"},545:(e,t,n)=>{n.d(t,{xA:()=>i});var r=n(33697);const o={[r.Z]:"Exceeded cache storage capacity.",[r.Y]:"Unexpected error occurred when using cache storage."};class i extends Error{constructor(e,t){const n=t||(o[e]?o[e]:o[r.Y]);super(`${e}: ${n}`),Object.setPrototypeOf(this,i.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=n}}},33697:(e,t,n)=>{n.d(t,{Y:()=>o,Z:()=>r});const r="cache_quota_exceeded",o="cache_error_unknown"},6764:(e,t,n)=>{n.d(t,{NE:()=>a,SB:()=>c,eB:()=>s});var r=n(71047),o=n(13270);const i={[o.clientInfoDecodingError]:"The client info could not be parsed/decoded correctly",[o.clientInfoEmptyError]:"The client info was empty",[o.tokenParsingError]:"Token cannot be parsed",[o.nullOrEmptyToken]:"The token is null or empty",[o.endpointResolutionError]:"Endpoints cannot be resolved",[o.networkError]:"Network request failed",[o.openIdConfigError]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[o.hashNotDeserialized]:"The hash parameters could not be deserialized",[o.invalidState]:"State was not the expected format",[o.stateMismatch]:"State mismatch error",[o.stateNotFound]:"State not found",[o.nonceMismatch]:"Nonce mismatch error",[o.authTimeNotFound]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[o.maxAgeTranspired]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[o.multipleMatchingTokens]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[o.multipleMatchingAccounts]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[o.multipleMatchingAppMetadata]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[o.requestCannotBeMade]:"Token request cannot be made without authorization code or refresh token.",[o.cannotRemoveEmptyScope]:"Cannot remove null or empty scope from ScopeSet",[o.cannotAppendScopeSet]:"Cannot append ScopeSet",[o.emptyInputScopeSet]:"Empty input ScopeSet cannot be processed",[o.deviceCodePollingCancelled]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[o.deviceCodeExpired]:"Device code is expired.",[o.deviceCodeUnknownError]:"Device code stopped polling for unknown reasons.",[o.noAccountInSilentRequest]:"Please pass an account object, silent flow is not supported without account information",[o.invalidCacheRecord]:"Cache record object was null or undefined.",[o.invalidCacheEnvironment]:"Invalid environment when attempting to create cache entry",[o.noAccountFound]:"No account found in cache for given key.",[o.noCryptoObject]:"No crypto object detected.",[o.unexpectedCredentialType]:"Unexpected credential type.",[o.invalidAssertion]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[o.invalidClientCredential]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[o.tokenRefreshRequired]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[o.userTimeoutReached]:"User defined timeout for device code polling reached",[o.tokenClaimsCnfRequiredForSignedJwt]:"Cannot generate a POP jwt if the token_claims are not populated",[o.authorizationCodeMissingFromServerResponse]:"Server response does not contain an authorization code to proceed",[o.bindingKeyNotRemoved]:"Could not remove the credential's binding key from storage.",[o.endSessionEndpointNotSupported]:"The provided authority does not support logout",[o.keyIdMissing]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[o.noNetworkConnectivity]:"No network connectivity. Check your internet connection.",[o.userCanceled]:"User cancelled the flow.",[o.missingTenantIdError]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[o.methodNotImplemented]:"This method has not been implemented",[o.nestedAppAuthBridgeDisabled]:"The nested app auth bridge is disabled"},a={clientInfoDecodingError:{code:o.clientInfoDecodingError,desc:i[o.clientInfoDecodingError]},clientInfoEmptyError:{code:o.clientInfoEmptyError,desc:i[o.clientInfoEmptyError]},tokenParsingError:{code:o.tokenParsingError,desc:i[o.tokenParsingError]},nullOrEmptyToken:{code:o.nullOrEmptyToken,desc:i[o.nullOrEmptyToken]},endpointResolutionError:{code:o.endpointResolutionError,desc:i[o.endpointResolutionError]},networkError:{code:o.networkError,desc:i[o.networkError]},unableToGetOpenidConfigError:{code:o.openIdConfigError,desc:i[o.openIdConfigError]},hashNotDeserialized:{code:o.hashNotDeserialized,desc:i[o.hashNotDeserialized]},invalidStateError:{code:o.invalidState,desc:i[o.invalidState]},stateMismatchError:{code:o.stateMismatch,desc:i[o.stateMismatch]},stateNotFoundError:{code:o.stateNotFound,desc:i[o.stateNotFound]},nonceMismatchError:{code:o.nonceMismatch,desc:i[o.nonceMismatch]},authTimeNotFoundError:{code:o.authTimeNotFound,desc:i[o.authTimeNotFound]},maxAgeTranspired:{code:o.maxAgeTranspired,desc:i[o.maxAgeTranspired]},multipleMatchingTokens:{code:o.multipleMatchingTokens,desc:i[o.multipleMatchingTokens]},multipleMatchingAccounts:{code:o.multipleMatchingAccounts,desc:i[o.multipleMatchingAccounts]},multipleMatchingAppMetadata:{code:o.multipleMatchingAppMetadata,desc:i[o.multipleMatchingAppMetadata]},tokenRequestCannotBeMade:{code:o.requestCannotBeMade,desc:i[o.requestCannotBeMade]},removeEmptyScopeError:{code:o.cannotRemoveEmptyScope,desc:i[o.cannotRemoveEmptyScope]},appendScopeSetError:{code:o.cannotAppendScopeSet,desc:i[o.cannotAppendScopeSet]},emptyInputScopeSetError:{code:o.emptyInputScopeSet,desc:i[o.emptyInputScopeSet]},DeviceCodePollingCancelled:{code:o.deviceCodePollingCancelled,desc:i[o.deviceCodePollingCancelled]},DeviceCodeExpired:{code:o.deviceCodeExpired,desc:i[o.deviceCodeExpired]},DeviceCodeUnknownError:{code:o.deviceCodeUnknownError,desc:i[o.deviceCodeUnknownError]},NoAccountInSilentRequest:{code:o.noAccountInSilentRequest,desc:i[o.noAccountInSilentRequest]},invalidCacheRecord:{code:o.invalidCacheRecord,desc:i[o.invalidCacheRecord]},invalidCacheEnvironment:{code:o.invalidCacheEnvironment,desc:i[o.invalidCacheEnvironment]},noAccountFound:{code:o.noAccountFound,desc:i[o.noAccountFound]},noCryptoObj:{code:o.noCryptoObject,desc:i[o.noCryptoObject]},unexpectedCredentialType:{code:o.unexpectedCredentialType,desc:i[o.unexpectedCredentialType]},invalidAssertion:{code:o.invalidAssertion,desc:i[o.invalidAssertion]},invalidClientCredential:{code:o.invalidClientCredential,desc:i[o.invalidClientCredential]},tokenRefreshRequired:{code:o.tokenRefreshRequired,desc:i[o.tokenRefreshRequired]},userTimeoutReached:{code:o.userTimeoutReached,desc:i[o.userTimeoutReached]},tokenClaimsRequired:{code:o.tokenClaimsCnfRequiredForSignedJwt,desc:i[o.tokenClaimsCnfRequiredForSignedJwt]},noAuthorizationCodeFromServer:{code:o.authorizationCodeMissingFromServerResponse,desc:i[o.authorizationCodeMissingFromServerResponse]},bindingKeyNotRemovedError:{code:o.bindingKeyNotRemoved,desc:i[o.bindingKeyNotRemoved]},logoutNotSupported:{code:o.endSessionEndpointNotSupported,desc:i[o.endSessionEndpointNotSupported]},keyIdMissing:{code:o.keyIdMissing,desc:i[o.keyIdMissing]},noNetworkConnectivity:{code:o.noNetworkConnectivity,desc:i[o.noNetworkConnectivity]},userCanceledError:{code:o.userCanceled,desc:i[o.userCanceled]},missingTenantIdError:{code:o.missingTenantIdError,desc:i[o.missingTenantIdError]},nestedAppAuthBridgeDisabled:{code:o.nestedAppAuthBridgeDisabled,desc:i[o.nestedAppAuthBridgeDisabled]}};class s extends r.lR{constructor(e,t){super(e,t?`${i[e]}: ${t}`:i[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,s.prototype)}}function c(e,t){return new s(e,t)}},13270:(e,t,n)=>{n.r(t),n.d(t,{authTimeNotFound:()=>g,authorizationCodeMissingFromServerResponse:()=>F,bindingKeyNotRemoved:()=>L,cannotAppendScopeSet:()=>E,cannotRemoveEmptyScope:()=>I,clientInfoDecodingError:()=>r,clientInfoEmptyError:()=>o,deviceCodeExpired:()=>S,deviceCodePollingCancelled:()=>R,deviceCodeUnknownError:()=>k,emptyInputScopeSet:()=>_,endSessionEndpointNotSupported:()=>B,endpointResolutionError:()=>s,hashNotDeserialized:()=>l,invalidAssertion:()=>b,invalidCacheEnvironment:()=>O,invalidCacheRecord:()=>M,invalidClientCredential:()=>D,invalidState:()=>h,keyIdMissing:()=>G,maxAgeTranspired:()=>C,methodNotImplemented:()=>$,missingTenantIdError:()=>K,multipleMatchingAccounts:()=>T,multipleMatchingAppMetadata:()=>y,multipleMatchingTokens:()=>f,nestedAppAuthBridgeDisabled:()=>Q,networkError:()=>c,noAccountFound:()=>w,noAccountInSilentRequest:()=>v,noCryptoObject:()=>N,noNetworkConnectivity:()=>x,nonceMismatch:()=>p,nullOrEmptyToken:()=>a,openIdConfigError:()=>d,requestCannotBeMade:()=>A,stateMismatch:()=>u,stateNotFound:()=>m,tokenClaimsCnfRequiredForSignedJwt:()=>H,tokenParsingError:()=>i,tokenRefreshRequired:()=>U,unexpectedCredentialType:()=>P,userCanceled:()=>Y,userTimeoutReached:()=>q});const r="client_info_decoding_error",o="client_info_empty_error",i="token_parsing_error",a="null_or_empty_token",s="endpoints_resolution_error",c="network_error",d="openid_config_error",l="hash_not_deserialized",h="invalid_state",u="state_mismatch",m="state_not_found",p="nonce_mismatch",g="auth_time_not_found",C="max_age_transpired",f="multiple_matching_tokens",T="multiple_matching_accounts",y="multiple_matching_appMetadata",A="request_cannot_be_made",I="cannot_remove_empty_scope",E="cannot_append_scopeset",_="empty_input_scopeset",R="device_code_polling_cancelled",S="device_code_expired",k="device_code_unknown_error",v="no_account_in_silent_request",M="invalid_cache_record",O="invalid_cache_environment",w="no_account_found",N="no_crypto_object",P="unexpected_credential_type",b="invalid_assertion",D="invalid_client_credential",U="token_refresh_required",q="user_timeout_reached",H="token_claims_cnf_required_for_signedjwt",F="authorization_code_missing_from_server_response",L="binding_key_not_removed",B="end_session_endpoint_not_supported",G="key_id_missing",x="no_network_connectivity",Y="user_canceled",K="missing_tenant_id_error",$="method_not_implemented",Q="nested_app_auth_bridge_disabled"},6372:(e,t,n)=>{n.d(t,{P7:()=>a,aD:()=>c,q5:()=>s});var r=n(71047),o=n(69070);const i={[o.redirectUriEmpty]:"A redirect URI is required for all calls, and none has been set.",[o.claimsRequestParsingError]:"Could not parse the given claims request object.",[o.authorityUriInsecure]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[o.urlParseError]:"URL could not be parsed into appropriate segments.",[o.urlEmptyError]:"URL was empty or null.",[o.emptyInputScopesError]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[o.invalidPromptValue]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[o.invalidClaims]:"Given claims parameter must be a stringified JSON object.",[o.tokenRequestEmpty]:"Token request was empty and not found in cache.",[o.logoutRequestEmpty]:"The logout request was null or undefined.",[o.invalidCodeChallengeMethod]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[o.pkceParamsMissing]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[o.invalidCloudDiscoveryMetadata]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[o.invalidAuthorityMetadata]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[o.untrustedAuthority]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[o.missingSshJwk]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[o.missingSshKid]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[o.missingNonceAuthenticationHeader]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[o.invalidAuthenticationHeader]:"Invalid authentication header provided",[o.cannotSetOIDCOptions]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[o.cannotAllowNativeBroker]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[o.authorityMismatch]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},a={redirectUriNotSet:{code:o.redirectUriEmpty,desc:i[o.redirectUriEmpty]},claimsRequestParsingError:{code:o.claimsRequestParsingError,desc:i[o.claimsRequestParsingError]},authorityUriInsecure:{code:o.authorityUriInsecure,desc:i[o.authorityUriInsecure]},urlParseError:{code:o.urlParseError,desc:i[o.urlParseError]},urlEmptyError:{code:o.urlEmptyError,desc:i[o.urlEmptyError]},emptyScopesError:{code:o.emptyInputScopesError,desc:i[o.emptyInputScopesError]},invalidPrompt:{code:o.invalidPromptValue,desc:i[o.invalidPromptValue]},invalidClaimsRequest:{code:o.invalidClaims,desc:i[o.invalidClaims]},tokenRequestEmptyError:{code:o.tokenRequestEmpty,desc:i[o.tokenRequestEmpty]},logoutRequestEmptyError:{code:o.logoutRequestEmpty,desc:i[o.logoutRequestEmpty]},invalidCodeChallengeMethod:{code:o.invalidCodeChallengeMethod,desc:i[o.invalidCodeChallengeMethod]},invalidCodeChallengeParams:{code:o.pkceParamsMissing,desc:i[o.pkceParamsMissing]},invalidCloudDiscoveryMetadata:{code:o.invalidCloudDiscoveryMetadata,desc:i[o.invalidCloudDiscoveryMetadata]},invalidAuthorityMetadata:{code:o.invalidAuthorityMetadata,desc:i[o.invalidAuthorityMetadata]},untrustedAuthority:{code:o.untrustedAuthority,desc:i[o.untrustedAuthority]},missingSshJwk:{code:o.missingSshJwk,desc:i[o.missingSshJwk]},missingSshKid:{code:o.missingSshKid,desc:i[o.missingSshKid]},missingNonceAuthenticationHeader:{code:o.missingNonceAuthenticationHeader,desc:i[o.missingNonceAuthenticationHeader]},invalidAuthenticationHeader:{code:o.invalidAuthenticationHeader,desc:i[o.invalidAuthenticationHeader]},cannotSetOIDCOptions:{code:o.cannotSetOIDCOptions,desc:i[o.cannotSetOIDCOptions]},cannotAllowNativeBroker:{code:o.cannotAllowNativeBroker,desc:i[o.cannotAllowNativeBroker]},authorityMismatch:{code:o.authorityMismatch,desc:i[o.authorityMismatch]}};class s extends r.lR{constructor(e){super(e,i[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,s.prototype)}}function c(e){return new s(e)}},69070:(e,t,n)=>{n.r(t),n.d(t,{authorityMismatch:()=>R,authorityUriInsecure:()=>i,cannotAllowNativeBroker:()=>_,cannotSetOIDCOptions:()=>E,claimsRequestParsingError:()=>o,emptyInputScopesError:()=>c,invalidAuthenticationHeader:()=>I,invalidAuthorityMetadata:()=>C,invalidClaims:()=>l,invalidCloudDiscoveryMetadata:()=>g,invalidCodeChallengeMethod:()=>m,invalidPromptValue:()=>d,logoutRequestEmpty:()=>u,missingNonceAuthenticationHeader:()=>A,missingSshJwk:()=>T,missingSshKid:()=>y,pkceParamsMissing:()=>p,redirectUriEmpty:()=>r,tokenRequestEmpty:()=>h,untrustedAuthority:()=>f,urlEmptyError:()=>s,urlParseError:()=>a});const r="redirect_uri_empty",o="claims_request_parsing_error",i="authority_uri_insecure",a="url_parse_error",s="empty_url_error",c="empty_input_scopes_error",d="invalid_prompt_value",l="invalid_claims",h="token_request_empty",u="logout_request_empty",m="invalid_code_challenge_method",p="pkce_params_missing",g="invalid_cloud_discovery_metadata",C="invalid_authority_metadata",f="untrusted_authority",T="missing_ssh_jwk",y="missing_ssh_kid",A="missing_nonce_authentication_header",I="invalid_authentication_header",E="cannot_set_OIDCOptions",_="cannot_allow_native_broker",R="authority_mismatch"},71068:(e,t,n)=>{n.d(t,{$D:()=>d,CB:()=>l,IE:()=>u,a:()=>h});var r=n(44609),o=n(71047),i=n(678);const a=[i.interactionRequired,i.consentRequired,i.loginRequired,i.badToken],s=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],c={[i.noTokensFound]:"No refresh token found in the cache. Please sign-in.",[i.nativeAccountUnavailable]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[i.refreshTokenExpired]:"Refresh token has expired.",[i.badToken]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."},d={noTokensFoundError:{code:i.noTokensFound,desc:c[i.noTokensFound]},native_account_unavailable:{code:i.nativeAccountUnavailable,desc:c[i.nativeAccountUnavailable]},bad_token:{code:i.badToken,desc:c[i.badToken]}};class l extends o.lR{constructor(e,t,n,o,i,a,s,c){super(e,t,n),Object.setPrototypeOf(this,l.prototype),this.timestamp=o||r.YM.EMPTY_STRING,this.traceId=i||r.YM.EMPTY_STRING,this.correlationId=a||r.YM.EMPTY_STRING,this.claims=s||r.YM.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function h(e,t,n){const r=!!e&&a.indexOf(e)>-1,o=!!n&&s.indexOf(n)>-1,i=!!t&&a.some((e=>t.indexOf(e)>-1));return r||i||o}function u(e){return new l(e,c[e])}},678:(e,t,n)=>{n.r(t),n.d(t,{badToken:()=>d,consentRequired:()=>s,interactionRequired:()=>a,loginRequired:()=>c,nativeAccountUnavailable:()=>o,noTokensFound:()=>r,refreshTokenExpired:()=>i});const r="no_tokens_found",o="native_account_unavailable",i="refresh_token_expired",a="interaction_required",s="consent_required",c="login_required",d="bad_token"},44110:(e,t,n)=>{n.d(t,{g:()=>o});var r=n(71047);class o extends r.lR{constructor(e,t,n,r,i){super(e,t,n),this.name="ServerError",this.errorNo=r,this.status=i,Object.setPrototypeOf(this,o.prototype)}}},29519:(e,t,n)=>{n.d(t,{$:()=>r,V:()=>i});var r,o=n(44609);!function(e){e[e.Error=0]="Error",e[e.Warning=1]="Warning",e[e.Info=2]="Info",e[e.Verbose=3]="Verbose",e[e.Trace=4]="Trace"}(r||(r={}));class i{constructor(e,t,n){this.level=r.Info;const a=e||i.createDefaultLoggerOptions();this.localCallback=a.loggerCallback||(()=>{}),this.piiLoggingEnabled=a.piiLoggingEnabled||!1,this.level="number"==typeof a.logLevel?a.logLevel:r.Info,this.correlationId=a.correlationId||o.YM.EMPTY_STRING,this.packageName=t||o.YM.EMPTY_STRING,this.packageVersion=n||o.YM.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:r.Info}}clone(e,t,n){return new i({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const n=`[${(new Date).toUTCString()}] : [${t.correlationId||this.correlationId||""}] : ${this.packageName}@${this.packageVersion} : ${r[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,n,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:r.Error,containsPii:!1,correlationId:t||o.YM.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:r.Error,containsPii:!0,correlationId:t||o.YM.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:r.Warning,containsPii:!1,correlationId:t||o.YM.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:r.Warning,containsPii:!0,correlationId:t||o.YM.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:r.Info,containsPii:!1,correlationId:t||o.YM.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:r.Info,containsPii:!0,correlationId:t||o.YM.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:r.Verbose,containsPii:!1,correlationId:t||o.YM.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:r.Verbose,containsPii:!0,correlationId:t||o.YM.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:r.Trace,containsPii:!1,correlationId:t||o.YM.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:r.Trace,containsPii:!0,correlationId:t||o.YM.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}},93092:(e,t,n)=>{n.d(t,{A:()=>i});var r=n(6764),o=n(13270);const i={sendGetRequestAsync:()=>Promise.reject((0,r.SB)(o.methodNotImplemented)),sendPostRequestAsync:()=>Promise.reject((0,r.SB)(o.methodNotImplemented))}},55327:(e,t,n)=>{n.d(t,{H:()=>i});var r=n(44609),o=n(44110);class i{static generateThrottlingStorageKey(e){return`${r.Xw.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){const n=i.generateThrottlingStorageKey(t),a=e.getThrottlingCache(n);if(a){if(a.throttleTime<Date.now())return void e.removeItem(n);throw new o.g(a.errorCodes?.join(" ")||r.YM.EMPTY_STRING,a.errorMessage,a.subError)}}static postProcess(e,t,n){if(i.checkResponseStatus(n)||i.checkResponseForRetryAfter(n)){const o={throttleTime:i.calculateThrottleTime(parseInt(n.headers[r.OK.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(i.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(r.OK.RETRY_AFTER)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(1e3*Math.min(n+(t||r.Xw.DEFAULT_THROTTLE_TIME_SECONDS),n+r.Xw.DEFAULT_MAX_THROTTLE_TIME_SECONDS))}static removeThrottle(e,t,n,r){const o={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:r,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},i=this.generateThrottlingStorageKey(o);e.removeItem(i)}}},59579:(e,t,n)=>{n.d(t,{U:()=>r,r:()=>o});const r="@azure/msal-common",o="14.14.2"},91796:(e,t,n)=>{n.d(t,{H:()=>a});var r=n(6372),o=n(44609),i=n(69070);class a{constructor(e){this.headers=e}getShrNonce(){const e=this.headers[o.OK.AuthenticationInfo];if(e){const t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw(0,r.aD)(i.invalidAuthenticationHeader)}const t=this.headers[o.OK.WWWAuthenticate];if(t){const e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw(0,r.aD)(i.invalidAuthenticationHeader)}throw(0,r.aD)(i.missingNonceAuthenticationHeader)}parseChallenges(e){const t=e.indexOf(" "),n=e.substr(t+1).split(","),r={};return n.forEach((e=>{const[t,n]=e.split("=");r[t]=unescape(n.replace(/['"]+/g,o.YM.EMPTY_STRING))})),r}}},24071:(e,t,n)=>{n.d(t,{W:()=>d});var r=n(44609),o=n(956),i=n(84946),a=n(6372),s=n(63689),c=n(69070);class d{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(o.dn,encodeURIComponent(r.YM.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(o.dn,encodeURIComponent(`${r.YM.TOKEN_RESPONSE_TYPE} ${r.YM.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(o.ag,encodeURIComponent(e||r.p.QUERY))}addNativeBroker(){this.parameters.set(o.yj,encodeURIComponent("1"))}addScopes(e,t=!0,n=r.aZ){!t||n.includes("openid")||e.includes("openid")||n.push("openid");const a=t?[...e||[],...n]:e||[],s=new i.l(a);this.parameters.set(o.hx,encodeURIComponent(s.printScopes()))}addClientId(e){this.parameters.set(o.U6,encodeURIComponent(e))}addRedirectUri(e){s.M.validateRedirectUri(e),this.parameters.set(o._q,encodeURIComponent(e))}addPostLogoutRedirectUri(e){s.M.validateRedirectUri(e),this.parameters.set(o.Zn,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(o.AG,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(o.rg,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(o.SP,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(r.OK.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(r.OK.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(o.dF,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);s.M.validateClaims(n),this.parameters.set(o.IF,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(o.A3,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(o.pg,e.sku),this.parameters.set(o.pe,e.version),e.os&&this.parameters.set(o.sg,e.os),e.cpu&&this.parameters.set(o.C$,e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set(o.PM,e.appName),e?.appVersion&&this.parameters.set(o.Ns,e.appVersion)}addPrompt(e){s.M.validatePrompt(e),this.parameters.set(`${o.hF}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(o.c4,encodeURIComponent(e))}addNonce(e){this.parameters.set(o.au,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(s.M.validateCodeChallengeParams(e,t),!e||!t)throw(0,a.aD)(c.pkceParamsMissing);this.parameters.set(o.E0,encodeURIComponent(e)),this.parameters.set(o.uP,encodeURIComponent(t))}addAuthorizationCode(e){this.parameters.set(o.Sq,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(o.$n,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(o.aZ,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(o.Xs,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(o.p$,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(o.z1,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(o.oE,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(o.yF,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(o.H5,encodeURIComponent(e))}addGrantType(e){this.parameters.set(o.Am,encodeURIComponent(e))}addClientInfo(){this.parameters.set(r.JR,"1")}addExtraQueryParameters(e){Object.entries(e).forEach((([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)}))}addClientCapabilitiesToClaims(e,t){let n;if(e)try{n=JSON.parse(e)}catch(e){throw(0,a.aD)(c.invalidClaims)}else n={};return t&&t.length>0&&(n.hasOwnProperty(r.Fq.ACCESS_TOKEN)||(n[r.Fq.ACCESS_TOKEN]={}),n[r.Fq.ACCESS_TOKEN][r.Fq.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(r.Tq.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(r.Tq.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(o.Tq,r.IO.POP),this.parameters.set(o.R_,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(o.Tq,r.IO.SSH),this.parameters.set(o.R_,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(o.ai,e.generateCurrentRequestHeaderValue()),this.parameters.set(o.Az,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(o.R3,r.Xw.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(o.pG,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach(((t,n)=>{e.push(`${n}=${t}`)})),e.join("&")}}},63689:(e,t,n)=>{n.d(t,{M:()=>a});var r=n(6372),o=n(44609),i=n(69070);class a{static validateRedirectUri(e){if(!e)throw(0,r.aD)(i.redirectUriEmpty)}static validatePrompt(e){const t=[];for(const e in o._M)t.push(o._M[e]);if(t.indexOf(e)<0)throw(0,r.aD)(i.invalidPromptValue)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw(0,r.aD)(i.invalidClaims)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw(0,r.aD)(i.pkceParamsMissing);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([o.iF.PLAIN,o.iF.S256].indexOf(e)<0)throw(0,r.aD)(i.invalidCodeChallengeMethod)}}},84946:(e,t,n)=>{n.d(t,{l:()=>d});var r=n(6372),o=n(44048),i=n(6764),a=n(44609),s=n(69070),c=n(13270);class d{constructor(e){const t=e?o.$.trimArrayEntries([...e]):[],n=t?o.$.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach((e=>this.scopes.add(e)))}static fromString(e){const t=(e||a.YM.EMPTY_STRING).split(" ");return new d(t)}static createSearchScopes(e){const t=new d(e);return t.containsOnlyOIDCScopes()?t.removeScope(a.YM.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw(0,r.aD)(s.emptyInputScopesError)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new d(t);return!!e&&n.scopes.has(e.toLowerCase())}containsScopeSet(e){return!(!e||e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every((e=>this.containsScope(e)))}containsOnlyOIDCScopes(){let e=0;return a._A.forEach((t=>{this.containsScope(t)&&(e+=1)})),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach((e=>this.appendScope(e)))}catch(e){throw(0,i.SB)(c.cannotAppendScopeSet)}}removeScope(e){if(!e)throw(0,i.SB)(c.cannotRemoveEmptyScope);this.scopes.delete(e.trim())}removeOIDCScopes(){a._A.forEach((e=>{this.scopes.delete(e)}))}unionScopeSets(e){if(!e)throw(0,i.SB)(c.emptyInputScopeSet);const t=new Set;return e.scopes.forEach((e=>t.add(e.toLowerCase()))),this.scopes.forEach((e=>t.add(e.toLowerCase()))),t}intersectingScopeSets(e){if(!e)throw(0,i.SB)(c.emptyInputScopeSet);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),r=this.getScopeCount();return t.size<r+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach((t=>e.push(t))),e}printScopes(){return this.scopes?this.asArray().join(" "):a.YM.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}},44988:(e,t,n)=>{n.d(t,{w:()=>T,J:()=>y});var r=n(6764),o=n(44110),i=n(84946),a=n(69813),s=n(71068),c=n(36965),d=n(44609),l=n(39109);class h{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}var u=n(96423),m=n(49981),p=n(24296),g=n(34101),C=n(55254),f=n(13270);class T{constructor(e,t,n,r,o,i,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=r,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?(0,r.SB)(f.stateNotFound,"Cached State"):(0,r.SB)(f.stateNotFound,"Server State");let n,i;try{n=decodeURIComponent(e.state)}catch(t){throw(0,r.SB)(f.invalidState,e.state)}try{i=decodeURIComponent(t)}catch(t){throw(0,r.SB)(f.invalidState,e.state)}if(n!==i)throw(0,r.SB)(f.stateMismatch);if(e.error||e.error_description||e.suberror){const t=function(e){const t=e.error_uri?.lastIndexOf("code=");return t&&t>=0?e.error_uri?.substring(t+5):void 0}(e);if((0,s.a)(e.error,e.error_description,e.suberror))throw new s.CB(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new o.g(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`Error(s): ${e.error_codes||d.YM.NOT_AVAILABLE} - Timestamp: ${e.timestamp||d.YM.NOT_AVAILABLE} - Description: ${e.error_description||d.YM.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||d.YM.NOT_AVAILABLE} - Trace ID: ${e.trace_id||d.YM.NOT_AVAILABLE}`,r=e.error_codes?.length?e.error_codes[0]:void 0,i=new o.g(e.error,n,e.suberror,r,e.status);if(t&&e.status&&e.status>=d.t3.SERVER_ERROR_RANGE_START&&e.status<=d.t3.SERVER_ERROR_RANGE_END)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\n${i}`);if(t&&e.status&&e.status>=d.t3.CLIENT_ERROR_RANGE_START&&e.status<=d.t3.CLIENT_ERROR_RANGE_END)return void this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\n${i}`);if((0,s.a)(e.error,e.error_description,e.suberror))throw new s.CB(e.error,e.error_description,e.suberror,e.timestamp||d.YM.EMPTY_STRING,e.trace_id||d.YM.EMPTY_STRING,e.correlation_id||d.YM.EMPTY_STRING,e.claims||d.YM.EMPTY_STRING,r);throw i}}async handleServerTokenResponse(e,t,n,o,i,s,l,p,g){let C,y;if(this.performanceClient?.addQueueMeasurement(u.MX.HandleServerTokenResponse,e.correlation_id),e.id_token){if(C=(0,m.My)(e.id_token||d.YM.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&C.nonce!==i.nonce)throw(0,r.SB)(f.nonceMismatch);if(o.maxAge||0===o.maxAge){const e=C.auth_time;if(!e)throw(0,r.SB)(f.authTimeNotFound);(0,m.al)(e,o.maxAge)}}this.homeAccountIdentifier=a.d.generateHomeAccountId(e.client_info||d.YM.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,C),i&&i.state&&(y=c.W.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||o.sshKid||void 0;const A=this.generateCacheRecord(e,t,n,o,C,s,i);let I;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),I=new h(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(I)),l&&!p&&A.account){const e=A.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await T.generateAuthenticationResult(this.cryptoObj,t,A,!1,o,C,y,void 0,g)}await this.cacheStorage.saveCacheRecord(A,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&I&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(I))}return T.generateAuthenticationResult(this.cryptoObj,t,A,!1,o,C,y,e,g)}generateCacheRecord(e,t,n,o,a,s,c){const d=t.getPreferredCache();if(!d)throw(0,r.SB)(f.invalidCacheEnvironment);const l=(0,p.r)(a);let h,u;e.id_token&&a&&(h=(0,C.c_)(this.homeAccountIdentifier,d,e.id_token,this.clientId,l||""),u=y(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,a,e.client_info,d,l,c,void 0,this.logger));let m=null;if(e.access_token){const r=e.scope?i.l.fromString(e.scope):new i.l(o.scopes||[]),a=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,c=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,h=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=n+a,p=u+c,g=h&&h>0?n+h:void 0;m=(0,C.Np)(this.homeAccountIdentifier,d,e.access_token,this.clientId,l||t.tenant||"",r.printScopes(),u,p,this.cryptoObj.base64Decode,g,e.token_type,s,e.key_id,o.claims,o.requestedClaimsHash)}let g=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=n+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),g=(0,C.Mg)(this.homeAccountIdentifier,d,e.refresh_token,this.clientId,e.foci,s,t)}let T=null;return e.foci&&(T={clientId:this.clientId,environment:d,familyId:e.foci}),{account:u,idToken:h,accessToken:m,refreshToken:g,appMetadata:T}}static async generateAuthenticationResult(e,t,n,o,a,s,c,h,u){let m,p,C=d.YM.EMPTY_STRING,T=[],y=null,A=d.YM.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==d.IO.POP||a.popKid)C=n.accessToken.secret;else{const t=new l.Q(e),{secret:o,keyId:i}=n.accessToken;if(!i)throw(0,r.SB)(f.keyIdMissing);C=await t.signPopToken(o,i,a)}T=i.l.fromString(n.accessToken.target).asArray(),y=new Date(1e3*Number(n.accessToken.expiresOn)),m=new Date(1e3*Number(n.accessToken.extendedExpiresOn)),n.accessToken.refreshOn&&(p=new Date(1e3*Number(n.accessToken.refreshOn)))}n.appMetadata&&(A=n.appMetadata.familyId===d.hB?d.hB:"");const I=s?.oid||s?.sub||"",E=s?.tid||"";h?.spa_accountid&&n.account&&(n.account.nativeAccountId=h?.spa_accountid);const _=n.account?(0,g.o9)(n.account.getAccountInfo(),void 0,s,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:I,tenantId:E,scopes:T,account:_,idToken:n?.idToken?.secret||"",idTokenClaims:s||{},accessToken:C,fromCache:o,expiresOn:y,extExpiresOn:m,refreshOn:p,correlationId:a.correlationId,requestId:u||d.YM.EMPTY_STRING,familyId:A,tokenType:n.accessToken?.tokenType||d.YM.EMPTY_STRING,state:c?c.userRequestState:d.YM.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||d.YM.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||d.YM.EMPTY_STRING,code:h?.spa_code,fromNativeBroker:!1}}}function y(e,t,n,r,o,i,s,c,d,l,h){h?.verbose("setCachedAccount called");const u=e.getAccountKeys().find((e=>e.startsWith(n)));let m=null;u&&(m=e.getAccount(u,h));const p=m||a.d.createAccount({homeAccountId:n,idTokenClaims:o,clientInfo:i,environment:s,cloudGraphHostName:d?.cloud_graph_host_name,msGraphHost:d?.msgraph_host,nativeAccountId:l},t,r),C=p.tenantProfiles||[],f=c||p.realm;if(f&&!C.find((e=>e.tenantId===f))){const e=(0,g.Km)(n,p.localAccountId,f,o);C.push(e)}return p.tenantProfiles=C,p}},68464:(e,t,n)=>{n.d(t,{cm:()=>l});var r=n(96423),o=n(32256),i=n(71047),a=n(545),s=n(44110),c=n(71068);function d(e){const t=e.lastIndexOf(" ")+1;if(t<1)return e;const n=e.substring(t);let r=n.lastIndexOf("/");return r=r<0?n.lastIndexOf("\\"):r,r>=0?(e.substring(0,t)+"("+n.substring(r+1)+(")"===n.charAt(n.length-1)?"":")")).trimStart():e.trimStart()}class l{constructor(e,t,n,o,i,a,s,c){this.authority=t,this.libraryName=o,this.libraryVersion=i,this.applicationTelemetry=a,this.clientId=e,this.logger=n,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.eventStack=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=s||new Set;for(const e of r.Hi)this.intFields.add(e);this.abbreviations=c||new Map;for(const[e,t]of r.Qj)this.abbreviations.set(e,t)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){const n=this.preQueueTimeByCorrelationId.get(t);if(n){if(n.name===e)return n.time;this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`)}else this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`)}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,n,r){if(!t)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);if(0===n)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${n}`);else if(!n)return void this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);const o={eventName:e,queueTime:r?0:n,manuallyCompleted:r},i=this.queueMeasurements.get(t);if(i)i.push(o),this.queueMeasurements.set(t,i);else{this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`);const e=[o];this.queueMeasurements.set(t,e)}this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){const n=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,n),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,n);const i={eventId:this.generateId(),status:r.hU.InProgress,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:n,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};var a,s,c;return this.cacheEventByCorrelationId(i),a=i,s=this.abbreviations,(c=this.eventStack.get(n))&&c.push({name:s.get(a.name)||a.name}),{end:(e,t)=>this.endMeasurement({...i,...e},t),discard:()=>this.discardMeasurements(i.correlationId),add:e=>this.addFields(e,i.correlationId),increment:e=>this.incrementFields(e,i.correlationId),event:i,measurement:new o.t}}endMeasurement(e,t){const n=this.eventsByCorrelationId.get(e.correlationId);if(!n)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;const o=e.eventId===n.eventId;let l={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};e.durationMs=Math.round(e.durationMs||this.getDurationMs(e.startTimeMs));const h=JSON.stringify(function(e,t,n,r){if(!n?.length)return;const o=e=>e.length?e[e.length-1]:void 0,a=t.get(e.name)||e.name,s=o(n);if(s?.name!==a)return;const c=n?.pop();if(!c)return;const d=r instanceof i.lR?r.errorCode:r instanceof Error?r.name:void 0,l=r instanceof i.lR?r.subError:void 0;d&&c.childErr!==d&&(c.err=d,l&&(c.subErr=l)),delete c.name,delete c.childErr;const h={...c,dur:e.durationMs};e.success||(h.fail=1);const u=o(n);if(!u)return{[a]:h};let m;if(d&&(u.childErr=d),u[a]){const e=Object.keys(u).filter((e=>e.startsWith(a))).length;m=`${a}_${e+1}`}else m=a;return u[m]=h,u}(e,this.abbreviations,this.eventStack.get(n.correlationId),t));if(o?(l=this.getQueueInfo(e.correlationId),this.discardMeasurements(n.correlationId)):n.incompleteSubMeasurements?.delete(e.eventId),this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${e.durationMs} ms`,e.correlationId),!o)return n[e.name+"DurationMs"]=Math.floor(e.durationMs),{...n};t&&function(e,t,n,r=5){if(e instanceof Error)return e instanceof i.lR?(n.errorCode=e.errorCode,n.subErrorCode=e.subError,void((e instanceof s.g||e instanceof c.CB)&&(n.serverErrorNo=e.errorNo))):void(e instanceof a.xA?n.errorCode=e.errorCode:n.errorStack?.length?t.trace("PerformanceClient.addErrorStack: Stack already exist",n.correlationId):e.stack?.length?(e.stack&&(n.errorStack=function(e,t){if(t<0)return[];const n=e.split("\n")||[];if(n.length<2)return[];const r=[];for(let e=Math.max(n.length-t-1,1);e<n.length;e++){const o=n[e];if(r.length>=t)break;r.push(d(o))}return r}(e.stack,r)),n.errorName=e.name):t.trace("PerformanceClient.addErrorStack: Input stack is empty",n.correlationId));t.trace("PerformanceClient.addErrorStack: Input error is not instance of Error",n.correlationId)}(t,this.logger,n);let u={...n,...e},m=0;return u.incompleteSubMeasurements?.forEach((t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,u.correlationId),m++})),u.incompleteSubMeasurements=void 0,u={...u,queuedTimeMs:l.totalQueueTime,queuedCount:l.totalQueueCount,queuedManuallyCompletedCount:l.manuallyCompletedCount,status:r.hU.Completed,incompleteSubsCount:m,context:h},this.truncateIntegralFields(u),this.emitEvents([u],e.correlationId),u}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");const n=this.eventsByCorrelationId.get(t);n?this.eventsByCorrelationId.set(t,{...n,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");const n=this.eventsByCorrelationId.get(t);if(n)for(const t in e){if(n.hasOwnProperty(t)){if(isNaN(Number(n[t])))return}else n[t]=0;n[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){const t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}),this.eventStack.set(e.correlationId,[]))}getQueueInfo(e){const t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let n=0,r=0,o=0;return t?.forEach((e=>{n+=e.queueTime,r++,o+=e.manuallyCompleted?1:0})),{totalQueueTime:n,totalQueueCount:r,manuallyCompletedCount:o}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e),this.logger.trace("PerformanceClient: Event stack discarded",e),this.eventStack.delete(e)}addPerformanceCallback(e){for(const[t,n]of this.callbacks)if(n.toString()===e.toString())return this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${t}`),t;const t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){const t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach(((n,r)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${r}`,t),n.apply(null,[e])}))}truncateIntegralFields(e){this.intFields.forEach((t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))}))}getDurationMs(e){const t=Date.now()-e;return t<0?t:0}}},96423:(e,t,n)=>{n.d(t,{Hi:()=>a,MX:()=>r,Qj:()=>o,hU:()=>i});const r={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},o=new Map([[r.AcquireTokenByCode,"ATByCode"],[r.AcquireTokenByRefreshToken,"ATByRT"],[r.AcquireTokenSilent,"ATS"],[r.AcquireTokenSilentAsync,"ATSAsync"],[r.AcquireTokenPopup,"ATPopup"],[r.AcquireTokenRedirect,"ATRedirect"],[r.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[r.CryptoOptsSignJwt,"CryptoSignJwt"],[r.SilentCacheClientAcquireToken,"SltCacheClientAT"],[r.SilentIframeClientAcquireToken,"SltIframeClientAT"],[r.SilentRefreshClientAcquireToken,"SltRClientAT"],[r.SsoSilent,"SsoSlt"],[r.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[r.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[r.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[r.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[r.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[r.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[r.BrokerHandhshake,"BrokerHandshake"],[r.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[r.AcquireTokenByBroker,"ATByBroker"],[r.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[r.RefreshTokenClientAcquireToken,"RTClientAT"],[r.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[r.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[r.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[r.AcquireTokenFromCache,"ATFromCache"],[r.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[r.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[r.AcquireTokenBySilentIframe,"ATBySltIframe"],[r.InitializeBaseRequest,"InitBaseReq"],[r.InitializeSilentRequest,"InitSltReq"],[r.InitializeClientApplication,"InitClientApplication"],[r.SilentIframeClientTokenHelper,"SIClientTHelper"],[r.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[r.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[r.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[r.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[r.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[r.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[r.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[r.StandardInteractionClientInitializeAuthorizationCodeRequest,"StdIntClientInitAuthCodeReq"],[r.GetAuthCodeUrl,"GetAuthCodeUrl"],[r.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[r.HandleCodeResponse,"HandleCodeResp"],[r.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[r.AuthClientAcquireToken,"AuthClientAT"],[r.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[r.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[r.AuthClientCreateQueryString,"AuthClientCreateQueryStr"],[r.PopTokenGenerateCnf,"PopTGenCnf"],[r.PopTokenGenerateKid,"PopTGenKid"],[r.HandleServerTokenResponse,"HandleServerTRes"],[r.DeserializeResponse,"DeserializeRes"],[r.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[r.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[r.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[r.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[r.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[r.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[r.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[r.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[r.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[r.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[r.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[r.AcquireTokenByCodeAsync,"ATByCodeAsync"],[r.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[r.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[r.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[r.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[r.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[r.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[r.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[r.NativeGenerateAuthResult,"NtvGenAuthRes"],[r.RemoveHiddenIframe,"RemoveHiddenIframe"],[r.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[r.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[r.GeneratePkceCodes,"GenPkceCodes"],[r.GenerateCodeVerifier,"GenCodeVerifier"],[r.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[r.Sha256Digest,"Sha256Digest"],[r.GetRandomValues,"GetRandomValues"]]),i={NotStarted:0,InProgress:1,Completed:2},a=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"])},32256:(e,t,n)=>{n.d(t,{a:()=>i,t:()=>o});var r=n(96423);class o{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class i{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:r.hU.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new o}}startPerformanceMeasurement(){return new o}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}},94767:(e,t,n)=>{n.d(t,{e:()=>i});var r=n(44609),o=n(71047);class i{constructor(e,t){this.cacheOutcome=r.Rv.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||r.YM.EMPTY_STRING,this.wrapperVer=e.wrapperVer||r.YM.EMPTY_STRING,this.telemetryCacheKey=r.gT.CACHE_KEY+r.LR.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${r.gT.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],n=this.getNativeBrokerErrorCode();n?.length&&t.push(`broker_error=${n}`);const o=t.join(r.gT.VALUE_SEPARATOR),i=[e,this.getRegionDiscoveryFields()].join(r.gT.VALUE_SEPARATOR);return[r.gT.SCHEMA_VERSION,i,o].join(r.gT.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=i.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(r.gT.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(r.gT.VALUE_SEPARATOR),a=e.errors.length,s=[a,t<a?r.gT.OVERFLOW_TRUE:r.gT.OVERFLOW_FALSE].join(r.gT.VALUE_SEPARATOR);return[r.gT.SCHEMA_VERSION,e.cacheHits,n,o,s].join(r.gT.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=r.gT.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof o.lR?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(r.gT.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){const e=this.getLastRequests(),t=i.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{const n={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,n)}}static maxErrorsToSend(e){let t,n=0,o=0;const i=e.errors.length;for(t=0;t<i;t++){const i=e.failedRequests[2*t]||r.YM.EMPTY_STRING,a=e.failedRequests[2*t+1]||r.YM.EMPTY_STRING,s=e.errors[t]||r.YM.EMPTY_STRING;if(o+=i.toString().length+a.toString().length+s.length+3,!(o<r.gT.MAX_LAST_HEADER_BYTES))break;n+=1}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||r.YM.EMPTY_STRING),e.push(this.regionSource||r.YM.EMPTY_STRING),e.push(this.regionOutcome||r.YM.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){const t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){const e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){const{skus:t,libraryName:n,libraryVersion:r,extensionName:o,extensionVersion:i}=e,a=new Map([[0,[n,r]],[2,[o,i]]]);let s=[];if(t?.length){if(s=t.split(","),s.length<4)return t}else s=Array.from({length:4},(()=>"|"));return a.forEach(((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){const{skuArr:t,index:n,skuName:r,skuVersion:o}=e;n>=t.length||(t[n]=[r,o].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})})),s.join(",")}(e)}}},37414:(e,t,n)=>{n.d(t,{H:()=>c});var r=n(6372),o=n(44048),i=n(44609),a=n(97576),s=n(69070);class c{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw(0,r.aD)(s.urlEmptyError);e.includes("#")||(this._urlString=c.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return o.$.endsWith(t,"?")?t=t.slice(0,-1):o.$.endsWith(t,"?/")&&(t=t.slice(0,-2)),o.$.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw(0,r.aD)(s.urlParseError)}if(!e.HostNameAndPort||!e.PathSegments)throw(0,r.aD)(s.urlParseError);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw(0,r.aD)(s.authorityUriInsecure)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return c.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return!e||0===n.length||n[0]!==i.v2.COMMON&&n[0]!==i.v2.ORGANIZATIONS||(n[0]=e),c.constructAuthorityUriFromObject(t)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw(0,r.aD)(s.urlParseError);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter((e=>e&&e.length>0)),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw(0,r.aD)(s.urlParseError);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===i.YM.FORWARD_SLASH){const n=new c(t).getUrlComponents();return n.Protocol+"//"+n.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new c(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!(0,a.n)(e)}}},60056:(e,t,n)=>{async function r(e,t,n){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:n})}n.d(t,{A:()=>r})},44609:(e,t,n)=>{n.d(t,{$x:()=>g,E_:()=>_,F0:()=>D,Fq:()=>l,GU:()=>y,Gd:()=>c,I:()=>v,IO:()=>S,JR:()=>A,Kk:()=>O,LR:()=>f,Lz:()=>b,OK:()=>s,Qd:()=>C,Rv:()=>P,Tq:()=>M,Xw:()=>k,YM:()=>r,_2:()=>N,_A:()=>a,_M:()=>h,aG:()=>T,aZ:()=>i,gT:()=>R,hB:()=>I,iF:()=>u,jZ:()=>w,p:()=>p,t3:()=>o,u0:()=>E,v2:()=>d,zL:()=>m});const r={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},o={SUCCESS:200,SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR:400,CLIENT_ERROR_RANGE_START:400,BAD_REQUEST:400,UNAUTHORIZED:401,NOT_FOUND:404,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR:500,SERVER_ERROR_RANGE_START:500,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,SERVER_ERROR_RANGE_END:599,MULTI_SIDED_ERROR:600},i=[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE],a=[...i,r.EMAIL_SCOPE],s={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},c={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},d={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},l={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},h={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},u={PLAIN:"plain",S256:"S256"},m={QUERY:"query",FRAGMENT:"fragment"},p={...m,FORM_POST:"form_post"},g={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},C={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},f={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},T={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},y="appmetadata",A="client_info",I="1",E={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:86400},_={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},R={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},S={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},k={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},v={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},M={username:"username",password:"password"},O={httpSuccess:200,httpBadRequest:400},w={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},N={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},P={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},b={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},D=300},60878:(e,t,n)=>{n.d(t,{T:()=>o,l:()=>r});const r=(e,t,n,r,o)=>(...i)=>{n.trace(`Executing function ${t}`);const a=r?.startMeasurement(t,o);if(o){const e=t+"CallCount";r?.incrementFields({[e]:1},o)}try{const r=e(...i);return a?.end({success:!0}),n.trace(`Returning result from ${t}`),r}catch(e){n.trace(`Error occurred in ${t}`);try{n.trace(JSON.stringify(e))}catch(e){n.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}},o=(e,t,n,r,o)=>(...i)=>{n.trace(`Executing function ${t}`);const a=r?.startMeasurement(t,o);if(o){const e=t+"CallCount";r?.incrementFields({[e]:1},o)}return r?.setPreQueueTime(t,o),e(...i).then((e=>(n.trace(`Returning result from ${t}`),a?.end({success:!0}),e))).catch((e=>{n.trace(`Error occurred in ${t}`);try{n.trace(JSON.stringify(e))}catch(e){n.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}))}},36965:(e,t,n)=>{n.d(t,{W:()=>a});var r=n(44609),o=n(6764),i=n(13270);class a{static setRequestState(e,t,n){const o=a.generateLibraryState(e,n);return t?`${o}${r.YM.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw(0,o.SB)(i.noCryptoObject);const n={id:e.createNewGuid()};t&&(n.meta=t);const r=JSON.stringify(n);return e.base64Encode(r)}static parseRequestState(e,t){if(!e)throw(0,o.SB)(i.noCryptoObject);if(!t)throw(0,o.SB)(i.invalidState);try{const n=t.split(r.YM.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(r.YM.RESOURCE_DELIM):r.YM.EMPTY_STRING,a=e.base64Decode(o),s=JSON.parse(a);return{userRequestState:i||r.YM.EMPTY_STRING,libraryState:s}}catch(e){throw(0,o.SB)(i.invalidState)}}}},44048:(e,t,n)=>{n.d(t,{$:()=>r});class r{static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),r=e=>decodeURIComponent(e.replace(/\+/g," "));return n.forEach((e=>{if(e.trim()){const[n,o]=e.split(/=(.+)/g,2);n&&o&&(t[r(n)]=r(o))}})),t}static trimArrayEntries(e){return e.map((e=>e.trim()))}static removeEmptyStringsFromArray(e){return e.filter((e=>!!e))}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}},55616:(e,t,n)=>{function r(){return Math.round((new Date).getTime()/1e3)}function o(e,t){const n=Number(e)||0;return r()+t>n}function i(e){return Number(e)>r()}n.d(t,{Hm:()=>o,XJ:()=>i,_C:()=>r})},97576:(e,t,n)=>{n.d(t,{S:()=>i,n:()=>a});var r=n(6764),o=n(13270);function i(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function a(e){if(!e||e.indexOf("=")<0)return null;try{const t=i(e),n=Object.fromEntries(new URLSearchParams(t));if(n.code||n.error||n.error_description||n.state)return n}catch(e){throw(0,r.SB)(o.hashNotDeserialized)}return null}}}]);
//# sourceMappingURL=https://artifacts.dev.azure.com/office/_apis/symbol/symsrv/app-home_v1_azurecommon_41b1a43ab77c2efaca28.bundle.js.map/42dded1635ce028a2f692188167e71a5/app-home_v1_azurecommon_41b1a43ab77c2efaca28.bundle.js.map